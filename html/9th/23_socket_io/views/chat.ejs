<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/socket.io/socket.io.js"></script>
    <title>Document</title>
    <style>
        .contaner{
            background-color: aqua;
            width: 500px;
            height:300px
        }
    </style>
</head>
<body>
    <div class="contaner"></div>
    <form id="chat">
        <input type="text" id="message" placeholder="채팅내용"><br/>
        <button>채팅</button>
        <button type="button" onclick="leave()">나가기</button>
    </form>
    <script>
        //클라이언트 소켓 연결
        const socket=io();
        const chatForm=document.querySelector('#chat');
        const div=document.querySelector('div');

        //채팅방 생성
        const chatRoom=prompt('채팅방명을 입력하세요');
        socket.emit('join',chatRoom);

        //브라우저 접속시
        socket.on('create',(res)=>{
            const a=document.createElement('div');
            a.textContent=res;
            div.appendChild(a);
        });
        //서버에서 보내주는 값
        socket.on('chat',(res)=>{
            const a=document.createElement('div');
            a.textContent=res;
            a.setAttribute('style','margin-left:90%')
            div.appendChild(a);
        })
        socket.on('other',(res)=>{
            const a=document.createElement('div');
            a.textContent=res;
            a.setAttribute('style','margin:5%')
            div.appendChild(a);
        })
        //폼 이벤트
        chatForm.addEventListener('submit',(e)=>{
            e.preventDefault();
            const msg=chatForm.querySelector('#message');
            socket.emit('message',msg.value);
            msg.value=' ';
        });
        function leave(){
            console.log('leave')
            socket.emit('leave')
        }
    </script>
</body>
</html>